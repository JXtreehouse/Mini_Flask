<template>
	<view class="qiun-columns">
		<!-- 线性走势 -->
		<view class="qiun-bg-white qiun-title-bar qiun-common-mt" >
			<view class="qiun-title-dot-light">线性走势</view>
		</view>
		<view class="qiun-charts" >
			<canvas canvas-id="canvasLine" id="canvasLine" class="charts" disable-scroll=true @touchstart="touchChart" @touchmove="moveLine" @touchend="touchEndLine"></canvas>
		</view>
		<!-- 词云 -->
		<view class="qiun-bg-white qiun-title-bar qiun-common-mt" >
			<view class="qiun-title-dot-light">高频词汇分布</view>
		</view>
		<view class="qiun-charts" >
			<canvas canvas-id="canvasWord" id="canvasWord" class="charts" @touchstart="touchWord"></canvas>
		</view>
	</view>
</template>

<script>
	import uCharts from '@/components/u-charts/u-charts.js';
	var _self;
	var canvaColumn=null;
	var canvaLine = null;
	var canvaWord = null;

	export default {
		data() {
			return {
				cWidth:'',
				cHeight:'',
				pixelRatio:1,
				serverData:'',
				details: {}
			}
		},
		onLoad(event) {
			_self = this;
			this.cWidth=uni.upx2px(750);
			this.cHeight=uni.upx2px(500);
			
			try {
				this.details = JSON.parse(decodeURIComponent(event.query));
			} catch (error) {
				this.details = JSON.parse(event.query);
			}
			
			uni.setNavigationBarTitle({
				title: this.details.title
			});
			
			//this.getDetail();
			this.getServerData();
		},
		methods: {
			getServerData(){
				var json_data = {
					"token": getApp().globalData.token,
					"secret": "周萝卜真帅"
				};
				uni.request({
					url: this.$host + '/api/zhihu/detail/' + this.details.hot_id + '/',
					data: json_data,
					header:{'content-type':'application/json'},
					method: 'POST',
					success: function(res) {
						//console.log(res.data.content.data)
						//下面这个根据需要保存后台数据，我是为了模拟更新柱状图，所以存下来了
						_self.serverData=res.data.data;
						let Column={categories:[],series:[]};
						let CountWord = {series:[]}
						//这里我后台返回的是数组，所以用等于，如果您后台返回的是单条数据，需要push进去
						Column.categories=res.data.data.categories;
						Column.series=res.data.data.series;
						CountWord.series = res.data.count_word;
						console.log(CountWord)
						//Column.categories=res.data.content.data.Column.categories;
						//Column.series=res.data.content.data.Column.series;
						_self.showWord("canvasWord",CountWord);
						_self.showLine("canvasLine",Column);
					},
					fail: () => {
						_self.tips="网络错误，小程序端请检查合法域名";
					},
				});
			},
			showWord(canvasId,chartData){
				canvaWord=new uCharts({
				  $this:_self,
				  canvasId: canvasId,
				  type: 'word',
				  background:'#000000',
				  pixelRatio:_self.pixelRatio,
				  series: chartData.series,
				  width: _self.cWidth*_self.pixelRatio,
				  height: _self.cHeight*_self.pixelRatio,
				  extra: {
				    word: {
				      type: 'normal'
				    }
				  }
				});
				
			},
			showLine(canvasId,chartData){
							canvaLine=new uCharts({
								$this:_self,
								canvasId: canvasId,
								type: 'line',
								fontSize:11,
								legend:{show:true},
								dataLabel:true,
								dataPointShape:true,
								background:'#FFFFFF',
								pixelRatio:_self.pixelRatio,
								categories: chartData.categories,
								series: chartData.series,
								animation: false,
								enableScroll: true,
								xAxis: {
									type:'grid',
									gridColor:'#CCCCCC',
									gridType:'dash',
									dashLength:8,
									scrollShow:true,
									scrollAlign:'left',
									itemCount:4,
									labelCount: 2,
								},
								yAxis: {
									gridType:'dash',
									gridColor:'#CCCCCC',
									dashLength:8,
									splitNumber:5,
									// min:10,
									// max:180,
									format:(val)=>{return val.toFixed(0)+'万热度'}
								},
								width: _self.cWidth*_self.pixelRatio,
								height: _self.cHeight*_self.pixelRatio,
								extra: {
									line:{
										type: 'straight'
									}
								}
							});
				},
			touchChart(e){
				canvaLine.scrollStart(e);
				// canvaLine.showToolTip(e, {
				// 	format: function (item, category) {
				// 		if(typeof item.data === 'object'){
				// 			return category + ' ' + item.name + ':' + item.data.value 
				// 		}else{
				// 			return category + ' ' + item.name + ':' + item.data 
				// 		}
				// 	}
				// });
			},
			touchWord(e){
				canvaWord.showToolTip(e, {
					format: function () {}
				});
			},
			moveLine(e) {
				canvaLine.scroll(e);
			},
			touchEndLine(e) {
				canvaLine.scrollEnd(e);
				//下面是toolTip事件，如果滚动后不需要显示，可不填写
				canvaLine.showToolTip(e, {
					format: function (item, category) {
						return category + ' ' + item.name + ':' + item.data 
					}
				});
			},
		}
	}
</script>

<style>
page{background:#F2F2F2;width: 750upx;overflow-x: hidden;}
.qiun-padding{padding:2%; width:96%;}
.qiun-wrap{display:flex; flex-wrap:wrap;}
.qiun-rows{display:flex; flex-direction:row !important;}
.qiun-columns{display:flex; flex-direction:column !important;}
.qiun-common-mt{margin-top:10upx;}
.qiun-bg-white{background:#FFFFFF;}
.qiun-title-bar{width:96%; padding:10upx 2%; flex-wrap:nowrap;}
.qiun-title-dot-light{border-left: 10upx solid #0ea391; padding-left: 10upx; font-size: 32upx;color: #000000}
.qiun-charts{width: 750upx; height:500upx;background-color: #FFFFFF;}
.charts{width: 750upx; height:500upx;background-color: #FFFFFF;}
</style>